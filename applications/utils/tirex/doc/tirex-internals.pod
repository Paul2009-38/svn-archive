
=head1 Tirex Internals

=head2 Metatile file structure

The metatile file structure from mod_tile/render has been used:

    struct entry {
        int offset;
        int size;
    };

    struct meta_layout {
        char magic[4]; // 'M' 'E' 'T' 'A'
        int count; // METATILE ^ 2
        int x, y, z; // lowest x,y of this metatile, plus z
        struct entry index[]; // count entries
        // Followed by the tile data
        // The index offsets are measured from the start of the file
    };

See tirex-renderd/metatilehandler.h/cc for the code.

=head2 Metatile directory structure

The metatile directory structure from mod_tile/render has been used:

.../MAP/ZOOM/A/B/C/D/E.meta

First component of the directory is the map name. Use a soft link if you
want to have different maps on different disks.

The next component is the zoom level (0..)

The next four directory components and the filename depend on the X
and Y metatile coordinates. The scheme makes sure that there aren't
too many files inside a single directory.

See lib/Tirex/Metatile.pm for conversion methods.

