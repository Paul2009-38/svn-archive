// navigation library initialisation data
// rate: as above
output packet InitialisationData (31) {
  uint8 Reserved /* */;
  uint8 AltitudeMode /* 0=last known, 1=user input, 2=dynamic */;
  uint8 AltitudeSource /* */;
  uint32 Altitude /* in meters */;
  uint8 DegradedMode /* 0=direction-time, 1=time-direction, 2=direction only, 3=time only, 4=disabled */;
  uint16 DegradedTimeout /* */;
  uint16 DeadReckoningTimeout /* */;
  uint16 Reserved /* */;
  uint8 TrackSmoothingMode /* 0=true, 1=false */;
  uint8 Reserved /* */;
  uint16 Reserved[3] /* */;
  uint8 DGPSSelection /* 0=use if available, 1=only if available, 2= never use */;
  uint16 DGPSTimeout /* */;
  uint16 ElevationNavMask /* */;
  uint16 Reserved /* */;
  uint8 Reserved /* */;
  uint16 Reserved /* */;
  uint8 Reserved /* */;
  uint16 Reserved /* */;
  uint8 StaticNavMode /* 0=true, 1=false */;
  uint16 Reserved /* */;
  int64 X /* x position in meters */;
  int64 Y /* y position in meters */;
  int64 Z /* z position in meters */;
  uint8 PositionInitSource /* 0=ROM position, 1=user position, 2=SRAM position, 3=network-assisted position */;
  uint64 Time /* GPS time */;
  uint16 Week /* GPS week */;
  uint8 TimeInitSource /* 0=ROM time, 1=user time, 2=SRAM time, 3=RTC time, 4=network time */;
  int64 Drift /* */;
  uint8 DriftInitSource /* 0=ROM clock, 1=user clock, 2=SRAM clock, 3=calibration clock, 4=network clock */;
}
